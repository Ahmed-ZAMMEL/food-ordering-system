<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.5</version>
        <!-- Note => relativePath: set empty for external parent projects. Use only for local parent projects. -->
        <relativePath/>
    </parent>

    <groupId>com.food.ordering.system</groupId>
    <artifactId>food-ordering-system</artifactId>
    <version>1.0-SNAPSHOT</version>

    <!-- NOTE => Packaging: pom vs jar, pom packaging creates a container for submodules with jar packaging. -->
    <packaging>pom</packaging>
    <modules>
        <module>order-service</module>
        <module>order-service/order-domain</module>
        <module>order-service/order-application</module>
        <module>order-service/order-dataaccess</module>
        <module>order-service/order-messaging</module>
        <module>order-service/order-container</module>
        <module>common</module>
        <module>common/common-domain</module>
    </modules>

    <properties>
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
    </properties>

    <!--
        NOTE => dependencyManagement: unifies the version for dependencies in the child modules.
        We can add dependencies on the child module without specifying the version.
    -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.food.ordering.system</groupId>
                <artifactId>order-domain-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.food.ordering.system</groupId>
                <artifactId>order-application-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.food.ordering.system</groupId>
                <artifactId>order-application</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.food.ordering.system</groupId>
                <artifactId>order-dataaccess</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.food.ordering.system</groupId>
                <artifactId>order-messaging</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.food.ordering.system</groupId>
                <artifactId>common-domain</artifactId>
                <version>${project.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- NOTE:
            => We want to add logging in the OrderDomainSeviceImpl class and this will be the only place that we will use a library in the domain module but only in the domain service, not in the domain core.
            => We will add provided lombok and spring starter dependencies in the dependencies section instead of dependencyManagement because we will use these dependencies application wise even in the domain service.
            => There are two types of dependencies in Maven: direct and transitive. Direct dependencies are the ones that we explicitly include in the project. These can be included using <dependency> tags.
               On the other hand, direct dependencies require transitive dependencies. Maven automatically includes required transitive dependencies in our project.
               Dependency scopes can help to limit the transitivity of the dependencies. They also modify the classpath for different build tasks. Maven has six default dependency scopes.

    -->
    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <!-- NOTE => maven-compiler-plugin: used to compile source of your project. Default source/target setting is 1.8-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <release>21</release>
                </configuration>
            </plugin>
        </plugins>

    </build>

</project>